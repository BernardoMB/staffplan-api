const CONST = require('../../common/const');

module.exports = {
  InProgress: (condition) => (
    `SELECT COUNT(PROJECT_ID) AS TOTAL FROM PROJECT 
      WHERE PROJECT_STATUS_ID = 
        (SELECT STATUS_ID FROM PROJECT_STATUS WHERE STATUS_NAME = '${CONST.INPROGRESS}')
      AND PROJECT.${condition}`
  ),
  Proposal: (condition) => (
    `SELECT COUNT(PROJECT_ID) AS TOTAL FROM PROJECT 
      WHERE PROJECT_STATUS_ID = 
        (SELECT STATUS_ID FROM PROJECT_STATUS WHERE STATUS_NAME = '${CONST.PROPOSAL}')
      AND PROJECT.${condition}`
  ),
  UnassignedRole: (condition) => (
    `SELECT SUM(COUNT) AS TOTAL FROM 
      (SELECT COUNT(ID) AS COUNT FROM PLANNED_PROJECT_STAFF LEFT JOIN 
      PROJECT ON PLANNED_PROJECT_STAFF.PROJECT_ID = PROJECT.PROJECT_ID 
      WHERE PROJECT.${condition}
      GROUP BY PROJECT.PROJECT_ID) as COUNT`
  ),
  OnBench: (condition) => (
    `SELECT COUNT(STAFF_ID) AS TOTAL FROM 
      STAFF WHERE STAFF_ID NOT IN (
        SELECT STAFF_ID FROM PROJECT_STAFF WHERE START_DATE <= NOW() AND END_DATE >= NOW() GROUP BY STAFF_ID
      ) AND STAFF.${condition}`
  ),
  StaffingGap: (condition) => (
     /* Get all staff id, project start and end date details if they have */
    `SELECT STAFF.STAFF_ID, PROJECT_STAFF.START_DATE, PROJECT_STAFF.END_DATE 
      FROM STAFF LEFT JOIN PROJECT_STAFF ON STAFF.STAFF_ID = PROJECT_STAFF.STAFF_ID 
        AND PROJECT_STAFF.END_DATE >= NOW() 
      WHERE STAFF.STAFF_STATUS_ID = (SELECT STATUS_ID FROM STAFF_STATUS 
        WHERE STATUS_NAME = '${CONST.ACTIVE}') AND STAFF.${condition}
      ORDER BY STAFF.STAFF_ID, PROJECT_STAFF.START_DATE, PROJECT_STAFF.END_DATE`
  ),
  OverUnderAllocation: (condition) => (
    `SELECT COUNT(ALLOCATION_TOTAL) AS TOTAL FROM 
      (SELECT SUM(ALLOCATION) as ALLOCATION_TOTAL FROM PROJECT_STAFF
        INNER JOIN STAFF ON STAFF.STAFF_ID = PROJECT_STAFF.STAFF_ID
      WHERE PROJECT_STAFF.START_DATE <= NOW() AND PROJECT_STAFF.END_DATE >= NOW() AND STAFF.${condition}
      GROUP BY PROJECT_STAFF.STAFF_ID HAVING ALLOCATION_TOTAL <> 100 ) as ALLOCATION_TOTAL
`
  )
}
